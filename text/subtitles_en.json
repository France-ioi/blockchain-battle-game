{
  "1": {
    "id": "1",
    "text": "--[:1000] Aren't you tired of governments and big banks  --[:3500] controlling your money ? --[:7000] Don't you wish you were in charge?  --[:11700] Time to try Octor!  --[:13500] Octor is a new cryptocurrency,  --[:16000] which you can exchange with anyone in the world,  --[:19000] quickly and securely.  --[:21500] Welcome to the future, with Octor",
    "text_fr": " --[:500] Vous aimeriez que votre argent  --[:2000] ne soit plus géré par les systèmes centralisés  --[:5000] que sont les États et les banques traditionnelles ?  --[:10700] Découvrez Octor ! --[:12400] Octor est une nouvelle crypto-monnaie  --[:14500] avec laquelle nous pouvons effectuer des transactions  --[:17400] avec n'importe qui dans le monde  --[:19000] et en toute sécurité.  --[:21500] Bienvenue dans le futur, avec Octor"
  },
  "2": {
    "id": "2",
    "text": "--[:1870] Welcome to Octor 2.0 --[:5000] From now on, each transaction is summed up by a hash.  --[:8500] A hash is a small number calculated by a computer --[:11900] which identifies a whole set of data, --[:16400] for instance an image, a sound, or a document. --[:20600] This number is formatted- --[:22800] for example in Octor, the hash is 4 digits long.  --[:28300] The slightest change in the data, and the resulting hash is entirely different.  --[:33700] It's quick and easy for a computer to calculate the hash, --[:36900] but the reverse, finding the data used to create the hash, is extremely hard.  --[:42600] In Octor, each transaction can now be identified by its hash, --[:46900] a bit like how you can identify a person from their fingerprint.  --[:51500] Welcome to the future, with Octor...",
    "text_fr": "--[:1870] Bienvenue dans Octor 2.0 --[:5000] Désormais, chaque transaction est résumée par un hash.  --[:9268] Le Hash est une petite suite de caractères calculée par l’ordinateur  --[:13209] qui sert à identifier tout un ensemble de données,  --[:16494] comme par exemple une image, un son, ou un texte. --[:20581] Cette suite de caractères est formatée.  --[:22772] Par exemple dans Octor, le hash est composé de 4 chiffres.  --[:28098] Un moindre changement dans les données, et le résultat du Hash est très différent.  --[:33542] Le calcul du hash est rapide pour l’ordinateur.  --[:36564] Inversement, recomposer les données à partir du hash est très compliqué.  --[:42621] Désormais, pour identifier chaque transition, Octor crée un hash unique. --[:47511] C’est un peu comme l’empreinte digitale d’une personne.  --[:51087] Bienvenue dans le futur avec Octor…"
  },
  "3": {
    "id": "3",
    "text": "--[:2400]Welcome to Octor 3.0,  --[:4700]where you can exchange messages in secret.   --[:7400]Whenever a user sends a message on a computer system,  --[:10300]it is always possible that someone is spying on them. --[:13800]To prevent a spy from reading a user's messages, they can encrypt them, --[:17400]turning them into a sequence of random-looking characters.   --[:20000]To accomplish this feat, we use a pair of keys:  --[:23400]one key is used to encrypt the message --[:25500]and the other to decrypt it.   --[:29000]In Octor, each user has their own pair of keys.  --[:32200]The user keeps their private key for themselves, and shares the public one with everybody.  --[:37700]Before sending a message, the user encrypts it --[:40700]with the public key of the user they are sending it to. --[:43600]While the message is in transit, a spy can't make out what it's saying! --[:48100]But when the receiving user gets the message, they can decrypt it with their private key.  --[:54600]Welcome to the future, with Octor…",
    "text_fr": "--[:2000]Bienvenue à Octor 3.0,  --[:4106]où on peut désormais échanger les messages secrets.   --[:7000]Quand on envoie les messages via un réseau informatique,  --[:9900]il est possible qu’on nous espionne. --[:11600]Pour empêcher un espion de lire nos messages, on les chiffre.  --[:15000]C’est à dire qu’on le transforme en une suite de caractères incompréhensibles.   --[:20000]Pour cela, on utilise une paire de clés :  --[:22400]une clé sert à chiffrer le message --[:25000]et l’autre sert à le déchiffrer.   --[:27800]Avec Octor, chaque utilisateur a sa propre paire de clés.   --[:31000]Il garde la clé privé pour lui et montre la clé publique à tout le monde.  --[:37000]Pour envoyer un message, l'expéditeur chiffre le message  --[:40800]avec la clé publique du destinataire.  --[:44000]Lorsque le message chiffré est en route, un espion ne peut plus le lire !   --[:48500]Quand le destinataire reçoit le message, il le déchiffre avec sa clé privée.  --[:53500]Bienvenue dans le futur avec Octor…"
  },
  "4": {
    "id": "4",
    "text": "--[:500]Welcome to Octor 4.0,  --[:2700]the world's most secure cryptocurrency!  --[:6300]How can we be sure who really created a transaction,  --[:9200]when all our users are anonymous?   --[:12000]Thanks to the the invention of digital signatures, this is finally possible.  --[:16400]When a user creates a transaction, --[:18400]they calculate the hash, then encrypt it with their private key.  --[:23500]This number represents the digital signature,  --[:26600]and it is included in the transaction.   --[:29500]To verify the signature, the other users decrypt it --[:32700]using the public key of the sender.  --[:36500]If they obtain the same hash, then the signature is correct, --[:40000]and they can approve the transaction.  --[:42700]Welcome to the future, with Octor!  ",
    "text_fr": "--[:500]Bienvenue à Octor 4.0,  --[:3200]la cryptomonnaie la plus sécure du monde !  --[:6500]Comment être sûr de l’auteur d’une transaction,  --[:8800]alors que tous les utilisateurs sont anonymes ?   --[:12000]Avec la signature numérique, c’est tout à fait possible.  --[:16000]Lorsqu’un utilisateur crée une transaction,  --[:18000]il calcule le hash, puis le chiffre avec sa clé privée.  --[:23500]Ce chiffre sert de signature numérique.  --[:26000]et il est ajouté à la transaction.   --[:29000]Pour vérifier la signature, les autres utilisateurs la déchiffrent   --[:33000]avec la clé public de l’expéditeur.  --[:35500]S’ils obtiennent le même hash, alors la signature est bonne,  --[:39000]et on sait qui a créé la transaction.  --[:42000]Octor: la cryptomonnaie du futur !  "
  },
  "5": {
    "id": "5",
    "text": "--[:500]Welcome to Octor 5.0  --[:3500]From now on, transactions are no longer sent in real time. --[:7200]Instead, they are published at regular intervals, in the form of blocks.  --[:11900]Each block references the previous one, --[:14800]forming a chain of blocks, or \"blockchain\".  --[:17800]In the blockchain, each block contains the hash of the previous one.  --[:22100]If a malicious user tries to alter the chain,  --[:25000]they would also need to modify the hash of that block. --[:28000]Since the new hash no longer matches the next block in the chain,  --[:31900]we can detect the hack.  --[:34500]Any user can create a block, --[:36900]so to pick who can create the next one, we organize a contest.  --[:41800]Each user chooses a number, called a \"nonce\", --[:45200]that will be included in the future block. --[:48500]With the nonce added, the hash of the block must be less than a certain limit.  --[:54300]This work is called \"mining\". --[:57800]The winner is the first user who finds a nonce that makes the hash small enough,  --[:62800]and takes home Octors as their prize.  --[:65000]Welcome to the future with Octor...",
    "text_fr": "--Bienvenue à Octor 5.0  --[:3000]Dans cette nouvelle version, les transactions ne sont plus publiées en temps réel.  --[:7000]Mais elles sont publié à intervalles réguliers sous forme de blocs.  --[:11000]Chaque bloc publié fait référence au bloc qui le précède,  --[:14000]formant ainsi une chaîne de bloc, ou “blockchain”.  --[:17500]Pour former la chaîne, chaque bloc contient le hash du bloc précédent.  --[:21500]Si un utilisateur malveillant essaie de changer les informations d'un bloc de la chaine,  --[:27000]il modifie le hash de celui-ci. --[:29500]Comme ce nouveau hash ne correspond plus, on peut détecter la tentative d’intrusion.  --[:34500]N’importe-quel utilisateur peut créer un bloc.  --[:37500]Mais pour déterminer lequel créera le prochain, on organise un défi à relever.  --[:43000]Chacun choisit un chiffre, appelé “nonce” qui sera inclus dans le futur bloc. --[:48000]Avec ce nonce ajouté, il faut que le hash du bloc soit inférieur à un certain seuil.  --[:53500]Ce travail est appelé le minage. --[:56000]Le premier qui arrive à trouver un nonce permettant que le hash soit suffisamment petit --[:61000]a gagné, et il est récompensé avec des Octors.  --[:65000]Bienvenue dans le futur avec Octor…"
  }
}